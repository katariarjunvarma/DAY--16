#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
};

class LinkedList {
public:
    Node* head;

    LinkedList() {
        head = nullptr;
    }

    void insertSorted(int value) {
        Node* newNode = new Node();
        newNode->data = value;
        newNode->next = nullptr;

        if (head == nullptr || head->data >= value) {
            newNode->next = head;
            head = newNode;
            return;
        }

        Node* current = head;
        while (current->next != nullptr && current->next->data < value) {
            current = current->next;
        }

        newNode->next = current->next;
        current->next = newNode;
    }

    void display() {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->data;
            if (temp->next != nullptr)
                cout << "->";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    LinkedList list;
    int n, valueToInsert;

    cout << "Enter the number of elements in the sorted linked list: ";
    cin >> n;

    cout << "Enter the elements of the sorted linked list: " << endl;
    for (int i = 0; i < n; i++) {
        int value;
        cin >> value;
        list.insertSorted(value); // Inserts each value in sorted order
    }

    cout << "Enter the value to insert: ";
    cin >> valueToInsert;

    list.insertSorted(valueToInsert);

    cout << "Updated Linked List: ";
    list.display();

    return 0;
}
